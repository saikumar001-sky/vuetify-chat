{"ast":null,"code":"import { clamp } from '../../util/helpers'; // For converting XYZ to sRGB\n\nconst srgbForwardMatrix = [[3.2406, -1.5372, -0.4986], [-0.9689, 1.8758, 0.0415], [0.0557, -0.2040, 1.0570]]; // Forward gamma adjust\n\nconst srgbForwardTransform = C => C <= 0.0031308 ? C * 12.92 : 1.055 * C ** (1 / 2.4) - 0.055; // For converting sRGB to XYZ\n\nconst srgbReverseMatrix = [[0.4124, 0.3576, 0.1805], [0.2126, 0.7152, 0.0722], [0.0193, 0.1192, 0.9505]]; // Reverse gamma adjust\n\nconst srgbReverseTransform = C => C <= 0.04045 ? C / 12.92 : ((C + 0.055) / 1.055) ** 2.4;\nexport function fromXYZ(xyz) {\n  const rgb = Array(3);\n  const transform = srgbForwardTransform;\n  const matrix = srgbForwardMatrix; // Matrix transform, then gamma adjustment\n\n  for (let i = 0; i < 3; ++i) {\n    rgb[i] = Math.round(clamp(transform(matrix[i][0] * xyz[0] + matrix[i][1] * xyz[1] + matrix[i][2] * xyz[2])) * 255);\n  } // Rescale back to [0, 255]\n\n  return (rgb[0] << 16) + (rgb[1] << 8) + (rgb[2] << 0);\n}\nexport function toXYZ(rgb) {\n  const xyz = [0, 0, 0];\n  const transform = srgbReverseTransform;\n  const matrix = srgbReverseMatrix; // Rescale from [0, 255] to [0, 1] then adjust sRGB gamma to linear RGB\n\n  const r = transform((rgb >> 16 & 0xff) / 255);\n  const g = transform((rgb >> 8 & 0xff) / 255);\n  const b = transform((rgb >> 0 & 0xff) / 255); // Matrix color space transform\n\n  for (let i = 0; i < 3; ++i) {\n    xyz[i] = matrix[i][0] * r + matrix[i][1] * g + matrix[i][2] * b;\n  }\n  return xyz;\n}","map":{"version":3,"names":["clamp","srgbForwardMatrix","srgbForwardTransform","C","srgbReverseMatrix","srgbReverseTransform","fromXYZ","xyz","rgb","Array","transform","matrix","i","Math","round","toXYZ","r","g","b"],"sources":["/home/sai/Desktop/SoftChat/softchat/node_modules/vuetify/lib/util/color/transformSRGB.js"],"sourcesContent":["import { clamp } from '../../util/helpers'; // For converting XYZ to sRGB\n\nconst srgbForwardMatrix = [[3.2406, -1.5372, -0.4986], [-0.9689, 1.8758, 0.0415], [0.0557, -0.2040, 1.0570]]; // Forward gamma adjust\n\nconst srgbForwardTransform = C => C <= 0.0031308 ? C * 12.92 : 1.055 * C ** (1 / 2.4) - 0.055; // For converting sRGB to XYZ\n\n\nconst srgbReverseMatrix = [[0.4124, 0.3576, 0.1805], [0.2126, 0.7152, 0.0722], [0.0193, 0.1192, 0.9505]]; // Reverse gamma adjust\n\nconst srgbReverseTransform = C => C <= 0.04045 ? C / 12.92 : ((C + 0.055) / 1.055) ** 2.4;\n\nexport function fromXYZ(xyz) {\n  const rgb = Array(3);\n  const transform = srgbForwardTransform;\n  const matrix = srgbForwardMatrix; // Matrix transform, then gamma adjustment\n\n  for (let i = 0; i < 3; ++i) {\n    rgb[i] = Math.round(clamp(transform(matrix[i][0] * xyz[0] + matrix[i][1] * xyz[1] + matrix[i][2] * xyz[2])) * 255);\n  } // Rescale back to [0, 255]\n\n\n  return (rgb[0] << 16) + (rgb[1] << 8) + (rgb[2] << 0);\n}\nexport function toXYZ(rgb) {\n  const xyz = [0, 0, 0];\n  const transform = srgbReverseTransform;\n  const matrix = srgbReverseMatrix; // Rescale from [0, 255] to [0, 1] then adjust sRGB gamma to linear RGB\n\n  const r = transform((rgb >> 16 & 0xff) / 255);\n  const g = transform((rgb >> 8 & 0xff) / 255);\n  const b = transform((rgb >> 0 & 0xff) / 255); // Matrix color space transform\n\n  for (let i = 0; i < 3; ++i) {\n    xyz[i] = matrix[i][0] * r + matrix[i][1] * g + matrix[i][2] * b;\n  }\n\n  return xyz;\n}\n//# sourceMappingURL=transformSRGB.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}