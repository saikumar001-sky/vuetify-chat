{"ast":null,"code":"export default {\n  data() {\n    return {\n      ffmpeg: null,\n      inputFile: null\n    };\n  },\n  methods: {\n    async handleFileSelect(event) {\n      this.inputFile = event.target.files[0];\n    }\n    // async compressVideo() {\n    //   if (!this.inputFile) return;\n\n    //   this.ffmpeg = createFFmpeg({ log: true });\n    //   await this.ffmpeg.load();\n\n    //   const inputPath = \"/input\";\n    //   const outputPath = \"/output.mp4\";\n\n    //   this.ffmpeg.FS(\"writeFile\", inputPath, await fetchFile(this.inputFile));\n\n    //   await this.ffmpeg.run(\n    //     \"-i\",\n    //     inputPath,\n    //     \"-vf\",\n    //     \"scale=640:480\",\n    //     outputPath\n    //   );\n\n    //   const compressedData = this.ffmpeg.FS(\"readFile\", outputPath);\n    //   const compressedFile = new Blob([compressedData.buffer], {\n    //     type: \"video/mp4\",\n    //   });\n\n    //   const downloadLink = document.createElement(\"a\");\n    //   downloadLink.href = URL.createObjectURL(compressedFile);\n    //   downloadLink.download = \"compressed_video.mp4\";\n    //   downloadLink.click();\n    // },\n  }\n};","map":{"version":3,"names":["data","ffmpeg","inputFile","methods","handleFileSelect","event","target","files"],"sources":["src/components/CustomChat.vue"],"sourcesContent":["<template>\n  <div>\n    <input type=\"file\" @change=\"handleFileSelect\" />\n    <button @click=\"compressVideo\">Compress Video</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      ffmpeg: null,\n      inputFile: null,\n    };\n  },\n  methods: {\n    async handleFileSelect(event) {\n      this.inputFile = event.target.files[0];\n    },\n    // async compressVideo() {\n    //   if (!this.inputFile) return;\n\n    //   this.ffmpeg = createFFmpeg({ log: true });\n    //   await this.ffmpeg.load();\n\n    //   const inputPath = \"/input\";\n    //   const outputPath = \"/output.mp4\";\n\n    //   this.ffmpeg.FS(\"writeFile\", inputPath, await fetchFile(this.inputFile));\n\n    //   await this.ffmpeg.run(\n    //     \"-i\",\n    //     inputPath,\n    //     \"-vf\",\n    //     \"scale=640:480\",\n    //     outputPath\n    //   );\n\n    //   const compressedData = this.ffmpeg.FS(\"readFile\", outputPath);\n    //   const compressedFile = new Blob([compressedData.buffer], {\n    //     type: \"video/mp4\",\n    //   });\n\n    //   const downloadLink = document.createElement(\"a\");\n    //   downloadLink.href = URL.createObjectURL(compressedFile);\n    //   downloadLink.download = \"compressed_video.mp4\";\n    //   downloadLink.click();\n    // },\n  },\n};\n</script>\n"],"mappings":"AAQA;EACAA,KAAA;IACA;MACAC,MAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,iBAAAC,KAAA;MACA,KAAAH,SAAA,GAAAG,KAAA,CAAAC,MAAA,CAAAC,KAAA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}